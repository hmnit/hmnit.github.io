hi this is a test


쿠러그 아카이브에서 가져왓습니다.

유니코드에서 한글 자모는 0x3130부터 0x3163까지, 완성형 글자는 0xAC00부터 0xD743까지의 범위를 가지고 있다.

(http://www.unicode.org/charts/ 에서 확인할 수 있다.)

 

이 때 완성형 한글의 유니코드 표를 보면 특이한 점을 알 수 있는데, 초성은 일정 주기마다 바뀌며, 그 안에서 중성 또한 일정 주기로 바뀐다는 것이다.

여기서 초성은 '안'이라는 글자를 보았을 때 'ㅇ'을, 중성은 'ㅏ'를, 종성은 'ㄴ'을 가리킨다.

ㄱ을 0번째 자음, ㅏ를 0번째 모음으로 보았을 때  '가'는 0번째 글자이며, '각'이 1번째, ... '개'가 28번째.. 이런 식이다.

이를 정리하면 ((초성 * 21) + 중성 * 28) + 종성을 하면 이에 해당하는 완성형 글자가 나옴을 알 수 있다.

다시 말해

완성형 한글의 유니코드 값 = 0xAC00+((초성의 순서 * 21) + 중성의 순서 * 28) + 종성의 순서

가 된다.

 

이 때, 초성, 중성, 종성의 순서는 아래와 같다.

초성: ㄱ, ㄲ, ㄴ, ㄷ, ㄸ, ㄹ, ㅁ, ㅂ, ㅃ, ㅅ, ㅆ, ㅇ, ㅈ, ㅉ, ㅊ, ㅋ, ㅌ, ㅍ, ㅎ
중성: ㅏ, ㅐ, ㅑ, ㅒ, ㅓ, ㅔ, ㅕ, ㅖ, ㅗ, ㅘ, ㅙ, ㅚ, ㅛ, ㅜ, ㅝ, ㅞ, ㅟ, ㅠ, ㅡ, ㅢ, ㅣ
종성: (없음), ㄱ, ㄲ, ㄳ, ㄴ, ㄵ, ㄶ, ㄷ, ㄹ, ㄺ, ㄻ, ㄼ, ㄽ, ㄾ, ㄿ, ㅀ, ㅁ, ㅂ, ㅄ, ㅅ, ㅆ, ㅇ, ㅈ, ㅊ, ㅋ, ㅌ, ㅍ, ㅎ

 

이를 이용하면 한글을 자음과 모음으로 분리할 수 있다.

종성은 글자의 순서를 28로 나눈 나머지,

중성은 글자의 순서를 (21*28)로 나눈 나머지는 28로 나눈 것,

초성은 글자의 순서를 (21*28)로 나는 것이 된다.

 

이를 PHP 코드로 나타내면 아래와 같다.

function split_hangul($letter){
    if($letter<0xAC00 || $letter>0xD7A3) return;

    $choseong=array('ㄱ','ㄲ','ㄴ','ㄷ','ㄸ','ㄹ','ㅁ','ㅂ','ㅃ','ㅅ','ㅆ','ㅇ','ㅈ','ㅉ','ㅊ','ㅋ','ㅌ','ㅍ','ㅎ');
    $jungseong=array('ㅏ','ㅐ','ㅑ','ㅒ','ㅓ','ㅔ','ㅕ','ㅖ','ㅗ','ㅘ','ㅙ','ㅚ','ㅛ','ㅜ','ㅝ','ㅞ','ㅟ','ㅠ','ㅡ','ㅢ','ㅣ');
    $jongseong=array('','ㄱ','ㄲ','ㄳ','ㄴ','ㄵ','ㄶ','ㄷ','ㄹ','ㄺ','ㄻ','ㄼ','ㄽ','ㄾ','ㄿ','ㅀ','ㅁ','ㅂ','ㅄ','ㅅ','ㅆ','ㅇ','ㅈ','ㅊ','ㅋ','ㅌ','ㅍ','ㅎ');

    $order=$letter-0xAC00;
    $cho=floor($order/(21*28));
    $jung=floor(($order%(21*28))/28);
    $jong=$order%28;

    return $choseong[$cho].$jungseong[$jung].$jongseong[$jong];
}
 

자모로 분리된 한글은 키보드에서 각 알파벳들과 매치됨을 알 수 있다.

ㄱ, ㄲ, ㄳ, ㄴ, ㄵ, ㄶ, ㄷ, ㄸ, ㄹ, ㄺ, ㄻ, ㄼ, ㄽ, ㄾ, ㄿ, ㅀ, ㅁ, ㅂ, ㅃ, ㅄ, ㅅ, ㅆ, ㅇ, ㅈ, ㅉ, ㅊ, ㅋ, ㅌ, ㅍ, ㅎ, ㅏ, ㅐ, ㅑ, ㅒ, ㅓ, ㅔ, ㅕ, ㅖ, ㅗ, ㅘ, ㅙ, ㅚ, ㅛ, ㅜ, ㅝ, ㅞ, ㅟ, ㅠ, ㅡ, ㅢ, ㅣ은 각각 r, r, rt, s, sw, sg, e, e, f, fr, fa, fq, ft, fx, fv, fg, a, q, q, qt, t, t, d, w, w, c, z, x, v, g, k, o, i, o, j, p, u, p, h, hk, ho, hl, y, n, nj, np, nl, b, m, ml, l 와 매치가 된다.

 

이를 PHP 코드로 간단하게 나타내면 아래와 같다.

function convert_engkey($hangul){
    $engkey=array('','r','r','rt','s','sw','sg','e','e','f','fr','fa','fq','ft','fx','fv','fg','a','q','q','qt','t','t','d','w','w','c','z','x','v','g','k','o','i','o','j','p','u','p','h','hk','ho','hl','y','n','nj','np','nl','b','m','ml','l');
    return $engkey[$hangul-0x3130];
}
 

반대로 영타를 한글로 변환할 수도 있다.

function convert_to_hangul($engkey){
    $engkey=array('','ㄱ','ㄱㄱ','ㄱㅅ','ㄴ','ㄴㅈ','ㄴㅎ','ㄷ','ㄷㄷ','ㄹ','ㄹㄱ','ㄹㅁ','ㄹㅂ','ㄹㅅ','ㄹㅌ','ㄹㅍ','ㄹㅎ','ㅁ','ㅂ','ㅂㅂ','ㅂㅅ','ㅅ','ㅅㅅ','ㅇ','ㅈ','ㅈㅈ','ㅊ','ㅋ','ㅌ','ㅍ','ㅎ','ㅏ','ㅐ','ㅑ','ㅒ','ㅓ','ㅔ','ㅕ','ㅖ','ㅗ','ㅗㅏ','ㅗㅐ','ㅗㅣ','ㅛ','ㅜ','ㅜㅓ','ㅜㅔ','ㅜㅣ','ㅠ','ㅡ','ㅡㅣ','ㅣ');
    return $hangul[$engkey-0x3130];
}
 

 

KHU 메뉴에서 검색을 하면 아래와 같이 키워드를 다 입력하지 않아도(심지어 '핛'은 '학ㅅ'으로도 인식되는 것을 볼 수 있다), 영타로 입력해도 키워드가 나타나는 것을 볼 수 있다.

(이 때 나타나는 키워드는 기존에 다른 사용자가 검색한 적이 있는 키워드이며, 정렬은 최근 검색 순이다.)

스크린샷 2015-10-26 3.53.36.png

 

스크린샷 2015-10-26 3.54.01.png

 

기존에 검색을 하면 해당 키워드(한글)과 영타 변환 결과를 DB에 저장시켜두고, 검색 창에 키워드 입력 시 이를 실시간으로 영타로 변환해 DB에서 영타를 기준으로 검색, 결과를 출력해주는 것이다.

이 때 모든 알파벳을 소문자로 했다.

 

사용된 PHP 코드는 아래와 같다.

function convert_keyword($keyword){
    $unicode_array=str_split(bin2hex(iconv('UTF-8','UCS-2',$keyword)),4);
    // 키워드를 UCS-2로 변환하고 16진수로 바꾼 뒤, 이를 4자리 단위로 나누어 배열로 만든다.
    $unicode_array=array_map('reverse_hexorder',$unicode_array);
    // UCS-2는 0xABCD와 같은 16진수를 CDAB와 같이 표현하므로 이 순서를 읽을 수 있는 16진수로 바꾼다.
    $dec_array=array_map('hexdec',$unicode_array);
    // 16진수를 10진수로 바꾼다.
    $keyboard_array=array_map('split_unicode',$dec_array);
    // 각 글자를 분리하여 영타로 바꾼다.
    
    return implode('',array_map('convert_to_string',$keyboard_array));
    // 변환된 영타의 유니코드 값가 들어있는 배열의 원소를 문자로 바꾸고 이를 합쳐 하나의 문자열로 만들어 반환한다.
}

function reverse_hexorder($hex){
    $pieces=str_split($hex,2);
    return $pieces[1].$pieces[0];
}

function split_unicode($letter){
    $eng_choseong=array('r','r','s','e','e','f','a','q','q','t','t','d','w','w','c','z','x','v','g');
    $eng_jungseong=array('k','o','i','o','j','p','u','p','h','hk','ho','hl','y','n','nj','np','nl','b','m','ml','l');
    $eng_jongseong=array('','r','r','rt','s','sw','sg','e','f','fr','fa','fq','ft','fx','fv','fg','a','q','qt','t','t','d','w','c','z','x','v','g');
    $eng_hangeul=array('','r','r','rt','s','sw','sg','e','e','f','fr','fa','fq','ft','fx','fv','fg','a','q','q','qt','t','t','d','w','w','c','z','x','v','g','k','o','i','o','j','p','u','p','h','hk','ho','hl','y','n','nj','np','nl','b','m','ml','l');

    if($letter>=0x3130 && $letter<=0x3163) return $eng_hangeul[$letter-0x3130];
    // 이미 분리된 자모면 바로 영타로 바꾸어 반환한다.
    
    if($letter<0xAC00 || $letter>0xD7A3) return $letter;
    // 한글이 아니면 그냥 반환한다.
    
    $order=$letter-0xAC00;
    $cho=floor($order/(21*28));
    $jung=floor(($order%(21*28))/28);
    $jong=$order%28;
    
    return array($eng_choseong[$cho],$eng_jungseong[$jung],$eng_jongseong[$jong]);
}

